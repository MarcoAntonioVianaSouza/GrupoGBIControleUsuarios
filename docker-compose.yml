 version: '3.4'

 networks:
  dockerapi-dev:
    driver: bridge 

 services:
   mssql-server:
     #image: mcr.microsoft.com/mssql/server:2017-latest-ubuntu
     
     #image:  mcr.microsoft.com/mssql/server
     image: mcr.microsoft.com/mssql/server:2019-latest
     environment:
       ACCEPT_EULA: "Y"
       #SA_PASSWORD: "Bsr4762ha7is44*9"
       MSSQL_SA_PASSWORD: "Bsr4762ha7is44*9"
       MSSQL_PID: Developer
     ports:
       - "1433:1433"
     networks:
       - dockerapi-dev 
     volumes:
       - C:\dados\volumes\sqlserver:/var/opt/mssql/data
   usuario-app:
     build: .
     environment:
       DbServer: "mssql-server"
       DbPort: "1433"
       DbUser: "SA"
       Password: "Bsr4762ha7is44*9"
       Database: "GrupoGBIControleUsuarioProd"
     ports: 
       - "8090:80"
     networks:
       - dockerapi-dev 

# version: '3.4'

# networks:
#   dockerapi-dev:
#     driver: bridge 

# services:
#   dockerapi:
#     image: dockerapi:latest
#     depends_on:
#       - "postgres_image"
#     build:
#       context: .
#       dockerfile: Dockerfile
#     ports:
#       - "8000:80"     
#     environment:
#       DB_CONNECTION_STRING: "host=postgres_image;port=5432;database=GrupoGBIControleUsuarioPROD;username=postgres;password=Dinamarca@2020"
#     networks:
#       - dockerapi-dev  
  
#   postgres_image:
#     image: postgres:latest
#     ports:
#       - "5432"
#     restart: always
#     volumes:
#       - db_volume:/var/lib/postgresql/data
#       #- ./dbscripts/seed.sql :/docker-entrypoint-initdb.d/seed.sql
#     environment:
#       #POSTGRES_USER: "postgres"
#       #POSTGRES_PASSWORD: "Dinamarca@2020"
#       #POSTGRES_DB: "GrupoGBIControleUsuarioPROD"
#       DbServer: "postgres_image"
#       DbPort: "5432"
#       DbUser: "postgres"
#       Password: "Dinamarca@2020"
#       Database: "GrupoGBIControleUsuarioPROD"

#     networks:
#       - dockerapi-dev
# volumes:
#   db_volume:
